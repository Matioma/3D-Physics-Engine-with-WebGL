
export class Shape {
    constructor(){
        this.VertexPositions=[];
        this._FaceColors = [];
        this.Indices = [];
        this.VertexNormals = [];
    }
}
export class Plane extends Shape{
    constructor(){
        super();
        this.VertexPositions= [
            // Front face
            -1.0, 0.0,  -1.0,
            1.0, 0.0,  -1.0,
            1.0,  0.0,  1.0,
            -1.0,  0.0,  1.0,
        ];
        this._FaceColors =[ 
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0]
        ];
        this.Indices =[
            0,1,2,    0,2,3, //front
        ];
        this.VertexNormals =[
            //Front
            0.0,  1.0,  0.0,
            0.0,  1.0,  0.0,
            0.0,  1.0,  0.0,
            0.0,  1.0,  0.0,
        ];
    }

    get FaceColors(){

        //COncatinate array of arrays to get one single array of values required by the GPU
        let colors =[];
        for (let i=0; i< this._FaceColors.length; i++){
            let c =this._FaceColors[i];
            colors =colors.concat(c);
        }
        return colors;
    }
}

export class Cube extends Shape{
    constructor(){
        super();
        this.VertexPositions= [
            // Front face
            -1.0, -1.0,  1.0,
            1.0, -1.0,  1.0,
            1.0,  1.0,  1.0,
            -1.0,  1.0,  1.0,
            // Back face
            -1.0, -1.0, -1.0,//4
            -1.0,  1.0, -1.0,//5
            1.0,  1.0, -1.0,//6
            1.0, -1.0, -1.0,//7
            // Top face
            -1.0,  1.0, -1.0,//8
            -1.0,  1.0,  1.0,//9
            1.0,  1.0,  1.0,//10
            1.0,  1.0, -1.0,//11
            // Bottom face
            -1.0, -1.0, -1.0,//12
            1.0, -1.0, -1.0,//13
            1.0, -1.0,  1.0,//14
            -1.0, -1.0,  1.0,//15
            // Right face
            1.0, -1.0, -1.0,//16
            1.0,  1.0, -1.0,//17
            1.0,  1.0,  1.0,//18
            1.0, -1.0,  1.0,//19
            // Left face
            -1.0, -1.0, -1.0,
            -1.0, -1.0,  1.0,
            -1.0,  1.0,  1.0,
            -1.0,  1.0, -1.0,
        ];
        this._FaceColors =[ 
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,0.0,0.0,1.0],
            [1.0,0.0,0.0,1.0],
            [1.0,0.0,0.0,1.0],
            [1.0,0.0,0.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0], 
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0]
        ];
        this.Indices =[
            0,1,2,    0,2,3, //front
            4,5,6,    4,6,7, //back
            8,9,10,   8,10,11, //top
            12,13,14, 12,14,15, //bottom
            16,17,18, 16,18,19, //right
            20,21,22, 20,22,23, //left
        ];
        this.VertexNormals =[
            //Front
            0.0,  0.0,  1.0,
            0.0,  0.0,  1.0,
            0.0,  0.0,  1.0,
            0.0,  0.0,  1.0,
    
             // Back
            0.0,  0.0, -1.0,
            0.0,  0.0, -1.0,
            0.0,  0.0, -1.0,
            0.0,  0.0, -1.0,
    
              // Top
            0.0,  1.0,  0.0,
            0.0,  1.0,  0.0,
            0.0,  1.0,  0.0,
            0.0,  1.0,  0.0,
    
            // Bottom
            0.0, -1.0,  0.0,
            0.0, -1.0,  0.0,
            0.0, -1.0,  0.0,
            0.0, -1.0,  0.0,
    
            // Right
            1.0,  0.0,  0.0,
            1.0,  0.0,  0.0,
            1.0,  0.0,  0.0,
            1.0,  0.0,  0.0,
    
            // Left
            -1.0,  0.0,  0.0,
            -1.0,  0.0,  0.0,
            -1.0,  0.0,  0.0,
            -1.0,  0.0,  0.0
        ];
    }

    get FaceColors(){

        //COncatinate array of arrays to get one single array of values required by the GPU
        let colors =[];
        for (let i=0; i< this._FaceColors.length; i++){
            let c =this._FaceColors[i];
            colors =colors.concat(c);
        }
        return colors;


    }
}

export class Sphere extends Shape{
    constructor(){
        super();
        this.VertexPositions= [
            // Front face
            -1.0, -1.0,  1.0,
            1.0, -1.0,  1.0,
            1.0,  1.0,  1.0,
            -1.0,  1.0,  1.0,
            // Back face
            -1.0, -1.0, -1.0,//4
            -1.0,  1.0, -1.0,//5
            1.0,  1.0, -1.0,//6
            1.0, -1.0, -1.0,//7
            // Top face
            -1.0,  1.0, -1.0,//8
            -1.0,  1.0,  1.0,//9
            1.0,  1.0,  1.0,//10
            1.0,  1.0, -1.0,//11
            // Bottom face
            -1.0, -1.0, -1.0,//12
            1.0, -1.0, -1.0,//13
            1.0, -1.0,  1.0,//14
            -1.0, -1.0,  1.0,//15
            // Right face
            1.0, -1.0, -1.0,//16
            1.0,  1.0, -1.0,//17
            1.0,  1.0,  1.0,//18
            1.0, -1.0,  1.0,//19
            // Left face
            -1.0, -1.0, -1.0,
            -1.0, -1.0,  1.0,
            -1.0,  1.0,  1.0,
            -1.0,  1.0, -1.0,
        ];
        this._FaceColors =[ 
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0], 
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0],
            [1.0,1.0,1.0,1.0]
        ];
        this.Indices =[
            0,1,2,    0,2,3, //front
            4,5,6,    4,6,7, //back
            8,9,10,   8,10,11, //top
            12,13,14, 12,14,15, //bottom
            16,17,18, 16,18,19, //right
            20,21,22, 20,22,23, //left
        ];
        this.VertexNormals =[
            //Front
            0.0,  0.0,  1.0,
            0.0,  0.0,  1.0,
            0.0,  0.0,  1.0,
            0.0,  0.0,  1.0,
    
             // Back
            0.0,  0.0, -1.0,
            0.0,  0.0, -1.0,
            0.0,  0.0, -1.0,
            0.0,  0.0, -1.0,
    
              // Top
            0.0,  1.0,  0.0,
            0.0,  1.0,  0.0,
            0.0,  1.0,  0.0,
            0.0,  1.0,  0.0,
    
            // Bottom
            0.0, -1.0,  0.0,
            0.0, -1.0,  0.0,
            0.0, -1.0,  0.0,
            0.0, -1.0,  0.0,
    
            // Right
            1.0,  0.0,  0.0,
            1.0,  0.0,  0.0,
            1.0,  0.0,  0.0,
            1.0,  0.0,  0.0,
    
            // Left
            -1.0,  0.0,  0.0,
            -1.0,  0.0,  0.0,
            -1.0,  0.0,  0.0,
            -1.0,  0.0,  0.0
        ];
    }

    get FaceColors(){
        //COncatinate array of arrays to get one single array of values required by the GPU
        let colors =[];
        for (let i=0; i< this._FaceColors.length; i++){
            let c =this._FaceColors[i];
            colors =colors.concat(c);
        }
        return colors;
    }
}





